{
  "headerText": "Vuetify Vue CLIパッケージ _(オフィシャルのサンプルがベースになっています)_ の一つを使って、すぐにプロジェクトを開始しましょう。Vuetifyは **SSR** (server-side rendering), **SPA** (single page application), **PWA** (progressive web application) そして通常の **HTML** をサポートしています。",
  "vueCliText1": "Vue CLI 3は、より簡単に開発を開始可能にする次世代のCLIツールです。Vue CLI 3を使ってアプリケーションを作ると、公式のwebpackアップデートとコンフィグの変更が利用可能になり、面倒なアップグレード作業をやらずにVuetifyを更新できるようになります。",
  "vueCliText2": "Vue CLI 3の使い方は[公式ドキュメント](https://cli.vuejs.org/guide/)を参照してください。",
  "vueCliText3": "**Tip**: すでに **Vue CLI** をインストールしている場合は, Terminalで<kbd>vue --version</kbd>を打って最新版かどうかを確認しましょう。",
  "vueCliText4": "CLIをインストールすると、新しいプロジェクトのScaffoldを生成できるようになります。特定のパッケージ(_vuex_ や _vue-router_ など)を含める必要がない場合は、 _default install_ を選びましょう。選んだオプションの内容で、すぐに使えるVueプロジェクトが作成されます。",
  "vueCliText5": "プロジェクトが作成されたら、CLIを使って [Vuetify package](https://github.com/vuetifyjs/vue-cli-plugin-vuetify) を追加できます。",
  "vueCliText6": "ここではインストール内容をカスタマイズするためのオプションを選択できます。デフォルトプリセットでは [a-la-carte](/customization/a-la-carte) が有効になっています。",
  "vueCliText7": "インストールが完了したら、<kbd>yarn serve</kbd> あるいは <kbd>npm run serve</kbd> を実行してアプリケーションをスタートしましょう。",
  "uiHeader": "## Vue UI上でのインストール",
  "uiText1": "Vuetifyは _@vue/cli_ 用の新しいビジュアルアプリケーションである **Vue UI** からもインストールできます。最新版のVue CLIがインストールされていることを確認して、このようにタイプします:",
  "uiText2": "このコマンドはVueのユーザーインターフェイスを起動し、ブラウザの[新しいウィンドウ](http://localhost:8000)を開きます。画面左側の **Plugins** をクリックします。画面が変わったら、 _Vuetify_ と検索します。",
  "uiText3": "インストールが完了すると、アプリケーションのデフォルトのVuetifyの設定を調整できるようになります。",
  "browserHeader": "## サポートしているブラウザ",
  "browserText": "Vuetifyは、Web開発を次のレベルに押し上げる先進的なフレームワークです。そのため、古いInternet Explorerのサポートを多少犠牲にせざるを得ませんでした。完全なリストではありませんが、主なブラウザのサポート状況は下記の通りです。",
  "cdnHeader": "## CDNの利用",
  "cdnText": "Vue CLIのテンプレートを使わずにVuetify.jsを試すには、下記のコードを`index.html`に貼り付けてください。最新のVueとVuetifyを使って、コンポーネントを試すことができます。codepenの[Vuetify starter](https://template.vuetifyjs.com)を使うこともできます。おすすめはされていませんが、もし本番環境でCDNパッケージを利用する場合は、アセットのバージョンを指定するようにしましょう。詳しいやり方は[jsdelivr](https://www.jsdelivr.com/)を参照してください。",
  "newHeader": "## 新しいアプリケーション",
  "existingHeader": "## 既存のアプリケーション",
  "existingAlert": "あなたのアプリケーションがVue CLI 3を使っている場合は、 [こちらのガイド](#new-applications)にしたがってVuetifyパッケージをインストールしてください。",
  "existingText1": "Vuetifyを既存のアプリケーションに追加する場合は、 _npm package_ をインストールする必要があります。 `npm` あるいは `yarn`のどちらを使っても追加できます。これらはアプリケーション上でどのようなリソースを利用可能にするかを管理するためのパッケージマネージャーです。",
  "existingText2": "`npm` の実行方法については、[npmの公式ドキュメント](https://docs.npmjs.com/getting-started/what-is-npm)を参照してください。yarnを使いたい場合は、[yarnの公式ドキュメント](https://yarnpkg.com/lang/en/docs/)を参照してください。セットアップを行ったら、CLIからコマンドを実行できるようになります。",
  "existingText3": "Vuetifyがインストールされたら、`src`ディレクトリの下に`plugins`ディレクトリを作ってください。内部に **vuetify.js** ファイルを追加します。ここにVuetifyのブートストラップとセットアップに関する全てを記述していきます。",
  "existingHeader3a": "### vuetify-loaderでのインストール",
  "existingText3a": "Vuetifyをインストールする方法は3つあります。1つ目の方法(おすすめ)は、自動 **A-la-carte** と呼んでいる[vuetify-loader](https://github.com/vuetifyjs/vuetify-loader)を使った方法です。この方法ではVuetifyの必要な機能とスタイルだけが利用されていることが確かめられつつ、コンパイル後のアプリケーションサイズが大きく削減されます。`vuetify/lib`からVuetifyをインポートすると、必要なスタイルも自動でインポートされることを覚えておいてください。",
  "existingText3a1": "もし**Vue CLI 3**を使えない場合は、**vue.config.js** あるいは **webpack** のconfigを使って手動でインストールすることもできます。詳しくは[A-la-carte page](/customization/a-la-carte)を参照してください。",
  "existingHeader3b": "### アラカルトインストール",
  "existingText3b": "**vuetify-loader**を使わずに、個別のコンポーネントを手動でインポートすることもできます。つまり、手動の**A-la-carte**です。",
  "existingHeader3c": "### フルインストール",
  "existingText3c": "最後は、Vuetifyの**全て**の機能とスタイルをインポート・設定する方法です。ただし前述の通り、出来るだけ**vuetify-loader**を使ってインストールする方法が**おすすめ**されています。この方法では、手動でスタイルを読み込む必要があります。この方法は、実行時にブラウザからVuetifyを読み込み初期化するやり方でも使われます。ブラウザからVuetifyをインストールする方法については[cdn quickstart](https://codepen.io/johnjleider/pen/bgJOrX)を参照してください。",
  "alert2": "*警告*: Vuetifyはできる限りCSSで衝突が発生しないように試みますが、既存のプロジェクト内であなたがカスタマイズしたスタイルに変化が起きないという保証はありません。",
  "webpackHeader1": "### Webpackでのインストール",
  "webpackText1": "**フル** / **A-la-carte**いずれの場合でも、Webpackを使ってアプリケーションの設定をすることができます。ただし、sassファイル用のルールを追加(あるいは既存のものを変更)する必要があります。まずは、必要な依存パッケージをインストールしましょう:",
  "webpackText2": "インストールが終わったら、`webpack.config.js`の**rules**に下のスニペットをコピーします。すでに**sass**のルールを設定している時は、下記のスニペットの一部あるいは全てを適用する必要があるかもしれません。**vuetify-loader**の利用を考えている場合は、[A-la-carte](/customization/a-la-carte#vueconfigjs-installation)にWebpackとあわせて利用する際の情報が記述されています。",
  "existingHeader4": "## Vuetifyオブジェクトのブートストラップ",
  "existingText4": "`src/plugins/vuetify.js`でVuetifyの設定をしたら、それをVueインスタンスに渡してあげます。この処理の流れは **vue-router** や **vuex** と同様です。",
  "existingHeader5": "## フォントのインストール",
  "existingText5": "Vuetifyは[Material Design Specification](https://material.io/design/typography/the-type-system.html)に基づき、Google Robotoフォントを利用します。このフォントを利用する一番簡単な方法は、メインとなる`index.html`の`<head>`に`<link>`タグを追加することです。",
  "existingText6": "[webfontloader](https://github.com/typekit/webfontloader)を使って非同期で読み込ませることもできます。",
  "existingHeader7": "### MDI Iconfont",
  "existingText7": "Vuetifyは標準のアイコンフォントに[Material Design Icons](https://materialdesignicons.com/)を使用します。最もシンプルなインストール方法は`npm`を使ったインストールです。",
  "existingText8": "パッケージをインストールしたら、pluginsフォルダの`vuetify.js`内でシンプルにインポートします。",
  "existingText9": "他のアイコンフォントの使い方やさらなる情報については[Icons](/customization/icons)を参照してください。",
  "edgeHeader": "## Edgeのサポート",
  "ie11Header": "## IE11とSafari 9のサポート"
}
